<%- include('../partials/header') %>
<link rel="stylesheet" href="/stylesheets/style_temp.css" />
<link rel="stylesheet" href="/stylesheets/datatables.css" />
<%- include('../partials/footer') -%>
<script
    type="text/javascript"
    src="https://www.gstatic.com/charts/loader.js"
></script>
<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script>
    let difficultyDetails = JSON.parse(`<%- JSON.stringify(difficulty) %>`);
    let topicDetails = JSON.parse(`<%- JSON.stringify(topics) %>`);
    let f1 = false;
    let f2 = false;
    let f3 = false;
</script>
<style>
    #datatable_wrapper {
        margin: 0;
    }
    #datatable1_wrapper {
        margin: 0;
    }
    .expandingDiv {
        margin-top: -100%;
        transition: all 1s;
    }
    #chartDetails {
        opacity: 0;
    }
    #studentDetails {
        opacity: 0;
    }
    #questionDetails {
        opacity: 0;
    }
    .animate {
        animation: fadeIn 1s linear forwards;
    }

    @keyframes fadeIn {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }
</style>
<%- include('../partials/footer') -%>
<link
    href="https://fonts.googleapis.com/css2?family=Nunito+Sans:opsz,wght@6..12,1000&display=swap"
    rel="stylesheet"
/>

<div class="grid-container">
    <!-- Header -->
    <%- include("./studentHeader") %>
    <!-- End Header -->

    <!-- Sidebar -->
    <%- include("./studentSidebar") %>
    <!-- End Sidebar -->

    <!-- Main -->
    <main class="main-container">
        <div class="row mb-3">
            <div class="col h1">Quiz Analysis</div>
        </div>

        <div class="row text-center mb-5">
            <div class="col-4">
                <button
                    class="btn rounded-pill"
                    style="background-color: blue"
                    id="chartBtn"
                    onclick="showChart()"
                >
                    Difficulty
                </button>
            </div>
            <div class="col-4">
                <button
                    class="btn rounded-pill"
                    id="studentBtn"
                    onclick="showStudent()"
                >
                    Topic
                </button>
            </div>
            <div class="col-4">
                <button
                    class="btn btn-primary rounded-pill"
                    id="questionBtn"
                    onclick="showQuestion()"
                >
                    Questions
                </button>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col h3 offset-1">
                You are in top <%-inTop.toFixed(0)%>%
            </div>
            <div class="col h3 offset-1">
                You scored <%=myMarks%> out of <%=totalMarks%>
            </div>
        </div>
        <div id="chartDetails">
            <div class="h3 text-center">Marks Wise Analysis</div>
            <div class="row" style="border: 1px solid">
                <div id="difficultyMarks" class="col-4">
                    <div class="row">
                        <div class="col-6" id="difficultyMarksEasy"></div>
                        <div class="col-6" id="difficultyMarksMedium"></div>
                    </div>
                    <div class="row">
                        <div class="col-3"></div>
                        <div class="col-6" id="difficultyMarksHard"></div>
                    </div>
                </div>
                <div
                    id="difficultyMarksPerformance"
                    class="col-4"
                    style="height: 400px"
                ></div>
                <div
                    id="difficultyMarksDonut"
                    class="col-4 d-flex align-items-center"
                ></div>
            </div>
            <div class="h3 text-center mt-5">Time Wise Analysis</div>

            <div class="row" style="border: 1px solid">
                <div
                    id="difficultyTime"
                    class="col-6"
                    style="height: 400px"
                ></div>
                <div
                    id="difficultyTimePerformance"
                    class="col-6"
                    style="height: 400px"
                ></div>
            </div>
        </div>

        <div  id="studentDetails">
            <div class="h3 text-center">Marks Wise Analysis</div>
            <div class="row" style="border: 1px solid">
                <div id="topicMarks" class="col-6 " ></div>
                <div
                    id="topicMarksPerformance"
                    class="col-6"
                    style="height: 400px"
                ></div>
            </div>
            <div class="h3 text-center mt-5">Time Wise Analysis</div>

            <div class="row" style="border: 1px solid">
                <div id="topicTime" class="col-6" style="height: 400px"></div>
                <div
                    id="topicTimePerformance"
                    class="col-6"
                    style="height: 400px"
                ></div>
            </div>
        </div>

        <div class="row" id="questionDetails">
            <div id="piechart" class="col-6" style="height: 400px"></div>
            <div id="histogram" class="col-6" style="height: 400px"></div>
        </div>
        <!-- End Main -->
    </main>
</div>
<script>
    function showChart() {
        $("#chartDetails").show();
        document.getElementById("chartDetails").classList.add("animate");
        $("#studentDetails").hide();
        $("#questionDetails").hide();
        $("#chartBtn").css("background-color", "white");
        $("#chartBtn").css("color", "#11467b");
        $("#chartBtn").css("box-shadow", "5px 5px");
        $("#studentBtn").css("background-color", "#11467b");
        $("#studentBtn").css("color", "white");
        $("#studentBtn").css("box-shadow", "none");

        $("#questionBtn").css("background-color", "#11467b");
        $("#questionBtn").css("color", "white");
        $("#questionBtn").css("box-shadow", "none");
        if (f1 == false) {
            fl = true;
            console.log(f1);
            difficultyMarks();
            difficultyMarks2();
            difficultyTime();
            difficultyMarksPerformance();
        }
        difficultyTimePerformance();
    }
    function showStudent() {
        $("#chartDetails").hide();
        $("#studentDetails").show();
        document.getElementById("studentDetails").classList.add("animate");
        $("#questionDetails").hide();
        $("#chartBtn").css("background-color", "#11467b");
        $("#chartBtn").css("color", "white");
        $("#chartBtn").css("box-shadow", "none");

        $("#studentBtn").css("background-color", "white");
        $("#studentBtn").css("color", "#11467b");
        $("#studentBtn").css("box-shadow", "5px 5px");

        $("#questionBtn").css("background-color", "#11467b");
        $("#questionBtn").css("color", "white");
        $("#questionBtn").css("box-shadow", "none");
        if (f2 == 0) {
            topicTime();
            topicMarks();
            topicMarksPerformance();
            topicTimePerformance();
        }
        f2 = 1;
    }
    function showQuestion() {
        $("#chartDetails").hide();
        $("#studentDetails").hide();
        $("#questionDetails").show();
        document.getElementById("questionDetails").classList.add("animate");
        $("#chartBtn").css("background-color", "#11467b");
        $("#chartBtn").css("color", "white");
        $("#chartBtn").css("box-shadow", "none");

        $("#studentBtn").css("background-color", "#11467b");
        $("#studentBtn").css("color", "white");
        $("#studentBtn").css("box-shadow", "none");

        $("#questionBtn").css("background-color", "white");
        $("#questionBtn").css("color", "#11467b");
        $("#questionBtn").css("box-shadow", "5px 5px");
    }

    $(document).ready(() => {
        var myTable;

        myTable = $("#datatable").DataTable({
            pagingType: "simple_numbers",
            language: {
                paginate: {
                    previous: "<",
                    next: ">",
                },
            },
        });
        $("#chartBtn").click();
        var myTable1;

        myTable1 = $("#datatable1").DataTable({
            pagingType: "simple_numbers",
            language: {
                paginate: {
                    previous: "<",
                    next: ">",
                },
            },
            columnDefs: [
                // Center align the header content of column 1
                { className: "dt-head-center", targets: [0, 1] },
            ],
        });
    });

    google.charts.load("current", { packages: ["corechart", "bar"] });
    //google.charts.setOnLoadCallback(drawCharts);
    function topicMarksPerformance() {
        let topic = [];
        topicDetails.forEach((ele) => {
            topic.push(ele[0]);
        });

        let topicSeries = [];
        let topicSeries2 = [];
        topicDetails.forEach((ele) => {
            topicSeries.push(ele[1].marks);
            topicSeries2.push(ele[1].totalMarks - ele[1].marks);
        });
        var options = {
            series: [
                {
                    name: "Correct Marks",
                    data: topicSeries,
                },
                {
                    name: "Wrong Marks",
                    data: topicSeries2,
                },
            ],
            chart: {
                type: "bar",
                height: 350,
                stacked: true,
                toolbar: {
                    show: false,
                },
            },
            responsive: [
                {
                    breakpoint: 2000,
                    options: {
                        options: {
                            chart: {
                                width: 500,
                            },
                            legend: {
                                position: "bottom",
                            },
                        },
                    },
                },
            ],
            plotOptions: {
                bar: {
                    horizontal: false,
                    borderRadius: 10,
                    dataLabels: {
                        total: {
                            enabled: true,
                            style: {
                                fontSize: "13px",
                                fontWeight: 900,
                            },
                        },
                    },
                },
            },
            xaxis: {
                type: "string",
                categories: topic,
            },
            fill: {
                opacity: 1,
            },
            title: {
                text: "Marks Wise Performance",
                align: "center",
                margin: 10,
                offsetX: 0,
                offsetY: 0,
                floating: false,
                style: {
                    fontSize: "14px",
                    fontWeight: "bold",
                    fontFamily: undefined,
                    color: "#263238",
                },
            },
        };

        var chart = new ApexCharts(
            document.querySelector("#topicMarksPerformance"),
            options
        );
        chart.render();
    }
    function topicMarksPerformancet() {
        let topicData = [["Topic", "Obtained Marks", "Total Marks"]];
        topicDetails.forEach((ele) => {
            topicData.push([
                ele[0],
                ele[1].marks,
                ele[1].totalMarks - ele[1].marks,
            ]);
        });
        var data = google.visualization.arrayToDataTable(topicData);

        var options = {
            colors: ["#00ff00", "#ff0000"],
            isStacked: true,
        };

        var chart = new google.visualization.ColumnChart(
            document.getElementById("topicMarksPerformance")
        );
        chart.draw(data, options);
    }

    function topicMarks() {
        let topicLabels = [];
        topicDetails.forEach((ele) => {
            topicLabels.push(ele[0]);
        });
        let topicSeries = [];
        topicDetails.forEach((ele) => {
            topicSeries.push(ele[1].marks);
        });
        var options = {
            labels: topicLabels,
            series: topicSeries,
            chart: {
                type: "donut",
            },
            plotOptions: {
                pie: {
                    donut: {
                        labels: {
                            show: true,
                            total: {
                                show: true,
                                label: "Total",
                            },
                        },
                        size: "40%",
                    },
                },
            },
            responsive: [
                {
                    breakpoint: 2000,
                    options: {
                        chart: {
                            width: 500,
                        },
                        legend: {
                            position: "bottom",
                        },
                    },
                },
            ],
            title: {
                text: "Marks Wise",
                align: "center",
                margin: 10,
                offsetX: 0,
                offsetY: 0,
                floating: false,
                style: {
                    fontSize: "14px",
                    fontWeight: "bold",
                    fontFamily: undefined,
                    color: "#263238",
                },
            },
        };

        var chart = new ApexCharts(
            document.querySelector("#topicMarks"),
            options
        );
        chart.render();
    }
    function topicMarkst() {
        let topicData = [["Topic", "Marks"]];
        topicDetails.forEach((ele) => {
            topicData.push([ele[0], 0]);
        });
        var data = google.visualization.arrayToDataTable(topicData);

        var options = {
            title: "Marks Wise",
            pieHole: 0.4,
        };

        var chart = new google.visualization.PieChart(
            document.getElementById("topicMarks")
        );
        chart.draw(data, options);
        let currValues = [["Topic", "Marks"]];
        topicDetails.forEach((ele) => {
            currValues.push([ele[0], 0]);
        });

        var handler = setInterval(function () {
            for (let index = 1; index < currValues.length; index++) {
                if (currValues[index][1] < topicDetails[index - 1][1].marks) {
                    currValues[index][1] +=
                        topicDetails[index - 1][1].marks * 0.1;
                    currValues[index][1] = parseFloat(
                        currValues[index][1].toPrecision(2)
                    );
                }
            }

            console.log(currValues);

            var data = google.visualization.arrayToDataTable(currValues);
            // update the pie
            chart.draw(data, options);
            // check if we have reached the desired value
            let flag = topicDetails.length;
            for (let index = 1; index < currValues.length; index++) {
                if (currValues[index][1] >= topicDetails[index - 1][1].marks) {
                    flag--;
                }
            }
            if (flag <= 0) {
                clearInterval(handler);
            }
        }, 50);
    }

    function topicTime() {
        let topicLabels = [];
        topicDetails.forEach((ele) => {
            topicLabels.push(ele[0]);
        });
        let topicSeries = [];
        topicDetails.forEach((ele) => {
            topicSeries.push(ele[1].timeSpent);
        });
        var options = {
            labels: topicLabels,
            series: topicSeries,
            chart: {
                type: "donut",
            },
            plotOptions: {
                pie: {
                    donut: {
                        labels: {
                            show: true,
                            total: {
                                show: true,
                                label: "Total(sec)",
                            },
                        },
                        size: "40%",
                    },
                },
            },
            responsive: [
                {
                    breakpoint: 2000,
                    options: {
                        chart: {
                            width: 500,
                        },
                        legend: {
                            position: "bottom",
                        },
                    },
                },
            ],
            title: {
                text: "Time Wise",
                align: "center",
                margin: 10,
                offsetX: 0,
                offsetY: 0,
                floating: false,
                style: {
                    fontSize: "14px",
                    fontWeight: "bold",
                    fontFamily: undefined,
                    color: "#263238",
                },
            },
        };

        var chart = new ApexCharts(
            document.querySelector("#topicTime"),
            options
        );
        chart.render();
    }
    function topicTimet() {
        let topicData = [["Topic", "Marks"]];
        topicDetails.forEach((ele) => {
            topicData.push([ele[0], ele[1].timeSpent]);
        });
        console.log(topicData);
        var data = google.visualization.arrayToDataTable(topicData);

        var options = {
            title: "Time Wise",
            pieHole: 0.4,
        };

        var chart = new google.visualization.PieChart(
            document.getElementById("topicTime")
        );
        chart.draw(data, options);
    }

    function difficultyMarks() {
        var options = {
            series: [
                (difficultyDetails[0][1].marks /
                    difficultyDetails[0][1].totalMarks) *
                    100,
            ],
            chart: {
                height: 220,
                type: "radialBar",
            },
            plotOptions: {
                radialBar: {
                    hollow: {
                        size: "70%",
                    },
                },
            },
            labels: ["Easy"],
        };

        var chart = new ApexCharts(
            document.querySelector("#difficultyMarksEasy"),
            options
        );
        chart.render();
        var options = {
            series: [
                (difficultyDetails[1][1].marks /
                    difficultyDetails[1][1].totalMarks) *
                    100,
            ],
            chart: {
                height: 220,
                type: "radialBar",
            },
            plotOptions: {
                radialBar: {
                    hollow: {
                        size: "70%",
                    },
                },
            },
            labels: ["Medium"],
        };

        var chart = new ApexCharts(
            document.querySelector("#difficultyMarksMedium"),
            options
        );
        chart.render();
        var options = {
            series: [
                (difficultyDetails[2][1].marks /
                    difficultyDetails[2][1].totalMarks) *
                    100,
            ],
            chart: {
                height: 220,
                type: "radialBar",
            },
            plotOptions: {
                radialBar: {
                    hollow: {
                        size: "70%",
                    },
                },
            },
            labels: ["Hard"],
        };

        var chart = new ApexCharts(
            document.querySelector("#difficultyMarksHard"),
            options
        );
        chart.render();
    }
    function difficultyMarks2() {
        let totalQuestion;
        let difficulty = [];
        difficultyDetails.forEach((ele) => {
            difficulty.push(ele[0]);
        });
        let difficultySeries = [];
        difficultyDetails.forEach((ele) => {
            difficultySeries.push(ele[1].marks);
        });
        var options = {
            labels: difficulty,
            series: difficultySeries,
            chart: {
                type: "donut",
            },
            plotOptions: {
                pie: {
                    donut: {
                        labels: {
                            show: true,
                            total: {
                                show: true,
                                label: "Total",
                            },
                        },
                        size: "40%",
                    },
                },
            },
            responsive: [
                {
                    breakpoint: 2000,
                    options: {
                        chart: {
                            width: 400,
                        },
                        legend: {
                            position: "bottom",
                        },
                    },
                },
            ],
            title: {
                text: "Marks Wise",
                align: "center",
                margin: 10,
                offsetX: 0,
                offsetY: 0,
                floating: false,
                style: {
                    fontSize: "14px",
                    fontWeight: "bold",
                    fontFamily: undefined,
                    color: "#263238",
                },
            },
        };

        var chart = new ApexCharts(
            document.querySelector("#difficultyMarksDonut"),
            options
        );
        chart.render();
    }
    function difficultyMarkst() {
        var data = google.visualization.arrayToDataTable([
            ["Difficulty", "Marks"],
            ["Easy", difficultyDetails[0][1].marks],
            ["Medium", difficultyDetails[1][1].marks],
            ["Hard", difficultyDetails[2][1].marks],
        ]);

        var options = {
            title: "Marks Wise",
            pieHole: 0.4,
        };

        var chart = new google.visualization.PieChart(
            document.getElementById("difficultyMarks")
        );
        chart.draw(data, options);
        let currValues = [0, 0, 0];
        var handler = setInterval(function () {
            if (currValues[0] < difficultyDetails[0][1].marks) {
                currValues[0] += difficultyDetails[0][1].marks * 0.1;
                currValues[0] = parseFloat(currValues[0].toPrecision(2));
            } else if (currValues[1] < difficultyDetails[1][1].marks) {
                currValues[1] += difficultyDetails[1][1].marks * 0.1;
                currValues[1] = parseFloat(currValues[1].toPrecision(2));
            } else if (currValues[2] < difficultyDetails[2][1].marks) {
                currValues[2] += difficultyDetails[2][1].marks * 0.1;
                currValues[2] = parseFloat(currValues[2].toPrecision(2));
            }
            var data = google.visualization.arrayToDataTable([
                ["Difficulty", "Marks"],
                ["Easy", currValues[0]],
                ["Medium", currValues[1]],
                ["Hard", currValues[2]],
            ]);
            // update the pie
            chart.draw(data, options);
            // check if we have reached the desired value
            if (
                currValues[0] >= difficultyDetails[0][1].marks &&
                currValues[1] >= difficultyDetails[1][1].marks &&
                currValues[2] >= difficultyDetails[2][1].marks
            ) {
                clearInterval(handler);
            }
        }, 50);
    }

    function difficultyTime() {
        let difficultyLabels = [];
        difficultyDetails.forEach((ele) => {
            difficultyLabels.push(ele[0]);
        });
        let difficultySeries = [];
        difficultyDetails.forEach((ele) => {
            difficultySeries.push(ele[1].timeSpent);
        });
        var options = {
            labels: difficultyLabels,
            series: difficultySeries,
            chart: {
                type: "donut",
            },
            plotOptions: {
                pie: {
                    donut: {
                        labels: {
                            show: true,
                            total: {
                                show: true,
                                label: "Total(sec)",
                            },
                        },
                        size: "40%",
                    },
                },
            },
            responsive: [
                {
                    breakpoint: 2000,
                    options: {
                        chart: {
                            width: 500,
                        },
                        legend: {
                            position: "bottom",
                        },
                    },
                },
            ],
            title: {
                text: "Time Wise",
                align: "center",
                margin: 10,
                offsetX: 0,
                offsetY: 0,
                floating: false,
                style: {
                    fontSize: "14px",
                    fontWeight: "bold",
                    fontFamily: undefined,
                    color: "#263238",
                },
            },
        };

        var chart = new ApexCharts(
            document.querySelector("#difficultyTime"),
            options
        );
        chart.render();
    }
    function difficultyTimet() {
        var data = google.visualization.arrayToDataTable([
            ["Difficulty", "Marks"],
            ["Easy", difficultyDetails[0][1].timeSpent],
            ["Medium", difficultyDetails[1][1].timeSpent],
            ["Hard", difficultyDetails[2][1].timeSpent],
        ]);

        var options = {
            title: "Time Wise",
            pieHole: 0.4,
        };

        var chart = new google.visualization.PieChart(
            document.getElementById("difficultyTime")
        );
        chart.draw(data, options);

        let currValues = [0, 0, 0];
        var handler = setInterval(function () {
            console.log(currValues);
            if (currValues[0] < difficultyDetails[0][1].timeSpent) {
                currValues[0] += difficultyDetails[0][1].timeSpent * 0.1;
                currValues[0] = parseFloat(currValues[0].toPrecision(2));
            } else if (currValues[1] < difficultyDetails[1][1].timeSpent) {
                currValues[1] += difficultyDetails[1][1].timeSpent * 0.1;
                currValues[1] = parseFloat(currValues[1].toPrecision(2));
            } else if (currValues[2] < difficultyDetails[2][1].timeSpent) {
                currValues[2] += difficultyDetails[2][1].timeSpent * 0.1;
                currValues[2] = parseFloat(currValues[2].toPrecision(2));
            }
            var data = google.visualization.arrayToDataTable([
                ["Difficulty", "Time Spent"],
                ["Easy", currValues[0]],
                ["Medium", currValues[1]],
                ["Hard", currValues[2]],
            ]);
            // update the pie
            chart.draw(data, options);
            // check if we have reached the desired value
            if (
                currValues[0] >= difficultyDetails[0][1].timeSpent &&
                currValues[1] >= difficultyDetails[1][1].timeSpent &&
                currValues[2] >= difficultyDetails[2][1].timeSpent
            ) {
                clearInterval(handler);
            }
        }, 50);
    }
    function topicTimePerformance() {
        let topic = [];
        topicDetails.forEach((ele) => {
            topic.push(ele[0]);
        });
        let topicSeries = [];
        let topicSeries2 = [];
        topicDetails.forEach((ele) => {
            topicSeries.push(ele[1].timeRequired);
            topicSeries2.push(ele[1].timeSpent);
        });
        var options = {
            series: [
                {
                    name: "Expected Time",
                    data: topicSeries,
                },
                {
                    name: "Time Spent",
                    data: topicSeries2,
                },
            ],
            chart: {
                type: "bar",
                height: 430,
            },
            plotOptions: {
                bar: {
                    horizontal: false,
                    dataLabels: {
                        position: "top",
                    },
                },
            },
            dataLabels: {
                enabled: true,
                style: {
                    fontSize: "12px",
                    colors: ["#fff"],
                },
            },
            stroke: {
                show: true,
                width: 1,
                colors: ["#fff"],
            },
            xaxis: {
                categories: topic,
            },
        };

        var chart = new ApexCharts(
            document.querySelector("#topicTimePerformance"),
            options
        );
        chart.render();
    }
    function difficultyMarksPerformance() {
        let difficulty = [];
        difficultyDetails.forEach((ele) => {
            difficulty.push(ele[0]);
        });
        let difficultySeries = [];
        let difficultySeries2 = [];
        difficultyDetails.forEach((ele) => {
            difficultySeries.push(ele[1].marks);
            difficultySeries2.push(ele[1].totalMarks - ele[1].marks);
        });
        var options = {
            series: [
                {
                    name: "Correct Marks",
                    data: difficultySeries,
                },
                {
                    name: "Wrong Marks",
                    data: difficultySeries2,
                },
            ],
            chart: {
                type: "bar",
                height: 350,
                stacked: true,
                toolbar: {
                    show: false,
                },
            },
            responsive: [
                {
                    breakpoint: 2000,
                    options: {
                        options: {
                            chart: {
                                width: 500,
                            },
                            legend: {
                                position: "bottom",
                            },
                        },
                    },
                },
            ],
            plotOptions: {
                bar: {
                    horizontal: false,
                    borderRadius: 10,
                    dataLabels: {
                        total: {
                            enabled: true,
                            style: {
                                fontSize: "13px",
                                fontWeight: 900,
                            },
                        },
                    },
                },
            },
            xaxis: {
                type: "string",
                categories: ["Easy", "Medium", "Hard"],
            },
            fill: {
                opacity: 1,
            },
            title: {
                text: "Marks Wise Performance",
                align: "center",
                margin: 10,
                offsetX: 0,
                offsetY: 0,
                floating: false,
                style: {
                    fontSize: "14px",
                    fontWeight: "bold",
                    fontFamily: undefined,
                    color: "#263238",
                },
            },
        };

        var chart = new ApexCharts(
            document.querySelector("#difficultyMarksPerformance"),
            options
        );
        chart.render();
    }
    function difficultyMarksPerformancet() {
        var data = google.visualization.arrayToDataTable([
            ["Difficulty", "Obtained Marks", "Total Marks"],
            [
                "Easy",
                difficultyDetails[0][1].marks,
                difficultyDetails[0][1].totalMarks -
                    difficultyDetails[0][1].marks,
            ], // RGB value
            [
                "Medium",
                difficultyDetails[1][1].marks,
                difficultyDetails[1][1].totalMarks -
                    difficultyDetails[1][1].marks,
            ], // English color name
            [
                "Hard",
                difficultyDetails[2][1].marks,
                difficultyDetails[2][1].totalMarks -
                    difficultyDetails[2][1].marks,
            ],
        ]);

        var options = {
            colors: ["#00ff00", "#ff0000"],
            isStacked: true,
            animation: {
                duration: 1000,
                startup: true,
            },
        };

        var chart = new google.visualization.ColumnChart(
            document.getElementById("difficultyMarksPerformance")
        );
        chart.draw(data, options);
    }

    function difficultyTimePerformance() {
        let difficulty = [];
        difficultyDetails.forEach((ele) => {
            difficulty.push(ele[0]);
        });
        let difficultySeries = [];
        let difficultySeries2 = [];
        difficultyDetails.forEach((ele) => {
            difficultySeries.push(ele[1].timeRequired);
            difficultySeries2.push(ele[1].timeSpent);
        });
        var options = {
            series: [
                {
                    name: "Expected Time",
                    data: difficultySeries,
                },
                {
                    name: "Time Spent",
                    data: difficultySeries2,
                },
            ],
            chart: {
                type: "bar",
                height: 430,
            },
            plotOptions: {
                bar: {
                    horizontal: false,
                    dataLabels: {
                        position: "top",
                    },
                },
            },
            dataLabels: {
                enabled: true,
                style: {
                    fontSize: "12px",
                    colors: ["#fff"],
                },
            },
            stroke: {
                show: true,
                width: 1,
                colors: ["#fff"],
            },
            xaxis: {
                categories: difficulty,
            },
        };

        var chart = new ApexCharts(
            document.querySelector("#difficultyTimePerformance"),
            options
        );
        chart.render();
    }
    function difficultyTimePerformancet() {
        let easyprfm = null;
        let medprfm = null;
        let hardprfm = null;
        if (
            difficultyDetails[0][1].timeSpent <=
                difficultyDetails[0][1].timeRequired * 1.2 &&
            difficultyDetails[0][1].timeSpent >=
                difficultyDetails[0][1].timeRequired * 0.8
        ) {
            easyprfm = "Average";
        } else if (
            difficultyDetails[0][1].timeSpent <=
                difficultyDetails[0][1].timeRequired * 1.6 &&
            difficultyDetails[0][1].timeSpent >
                difficultyDetails[0][1].timeRequired * 1.2
        ) {
            easyprfm = "More";
        } else if (
            difficultyDetails[0][1].timeSpent >
            difficultyDetails[0][1].timeRequired * 1.6
        ) {
            easyprfm = "Very Much";
        } else if (
            difficultyDetails[0][1].timeSpent >=
                difficultyDetails[0][1].timeRequired * 0.4 &&
            difficultyDetails[0][1].timeSpent <
                difficultyDetails[0][1].timeRequired * 0.8
        ) {
            easyprfm = "Less";
        } else {
            easyprfm = "Very Less";
        }
        if (
            difficultyDetails[1][1].timeSpent <=
                difficultyDetails[1][1].timeRequired * 1.2 &&
            difficultyDetails[1][1].timeSpent >=
                difficultyDetails[1][1].timeRequired * 0.8
        ) {
            medprfm = "Average";
        } else if (
            difficultyDetails[1][1].timeSpent <=
                difficultyDetails[1][1].timeRequired * 1.6 &&
            difficultyDetails[1][1].timeSpent >
                difficultyDetails[1][1].timeRequired * 1.2
        ) {
            medprfm = "More";
        } else if (
            difficultyDetails[1][1].timeSpent >
            difficultyDetails[1][1].timeRequired * 1.6
        ) {
            medprfm = "Very Much";
        } else if (
            difficultyDetails[1][1].timeSpent >=
                difficultyDetails[1][1].timeRequired * 0.4 &&
            difficultyDetails[1][1].timeSpent <
                difficultyDetails[1][1].timeRequired * 0.8
        ) {
            medprfm = "Less";
        } else {
            medprfm = "Very Less";
        }
        if (
            difficultyDetails[2][1].timeSpent <=
                difficultyDetails[2][1].timeRequired * 1.2 &&
            difficultyDetails[2][1].timeSpent >=
                difficultyDetails[2][1].timeRequired * 0.8
        ) {
            hardprfm = "Average";
        } else if (
            difficultyDetails[2][1].timeSpent <=
                difficultyDetails[2][1].timeRequired * 1.6 &&
            difficultyDetails[2][1].timeSpent >
                difficultyDetails[2][1].timeRequired * 1.2
        ) {
            hardprfm = "More";
        } else if (
            difficultyDetails[2][1].timeSpent >
            difficultyDetails[2][1].timeRequired * 1.6
        ) {
            hardprfm = "Very Much";
        } else if (
            difficultyDetails[2][1].timeSpent >=
                difficultyDetails[2][1].timeRequired * 0.4 &&
            difficultyDetails[2][1].timeSpent <
                difficultyDetails[2][1].timeRequired * 0.8
        ) {
            hardprfm = "Less";
        } else {
            hardprfm = "Very Less";
        }
        var data = google.visualization.arrayToDataTable([
            ["Difficulty", "Time Spent"],
            ["Easy", easyprfm],
            ["Medium", medprfm],
            ["Hard", hardprfm],
        ]);

        var options = {};

        var chart = new google.charts.Bar(
            document.getElementById("difficultyTimePerformance")
        );
        chart.draw(data, google.charts.Bar.convertOptions(options));
    }
</script>
<!-- <script src="/scripts/addSubject.js"></script> -->
<%- include('../partials/sweetalert') %> <%- include('../partials/footer2') -%>
